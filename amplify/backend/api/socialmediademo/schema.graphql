enum PropertyCondition {
  EXCELLENT
  GOOD
  FAIR
  POOR
}

type ExteriorRepair {
  painting: Float
  structure: Float
  landscaping: Float
  roof: Float
  windows: Float
  other: Float
}

type InteriorRepair {
  painting: Float
  structure: Float
  appliances: Float
  utilities: Float
  flooring: Float
  other: Float
}

type BrokerPriceOpinion @model @auth(rules: [{allow: public}]) {
  id: ID!
  sellerRealEstateProfileID: String
  dateInspected: AWSDateTime
  agentEmail: AWSEmail
  exteriorInspected: Boolean
  interiorInspected: Boolean
  salePriceEstimateAsIs: Float
  salePriceEstimateAsRepaired: Float
  houseType: String
  occupant: String
  attachments: [Attachment]
  interiorRepairs: InteriorRepair
  exteriorRepairs: ExteriorRepair
  repairsRecommended: Boolean
  propertyCondition: PropertyCondition
  inspectionComments: String
  isPropertyOnMLS: Boolean
  revision: Int
  status: String
}

enum ClientReason {
  FORBEARANCE
  FORECLOSURE
  RETIREMENT
  MARKET
  OTHER
}

enum RealEstateStatus {
  NEW
  DOCS_UPLOADED
  DOCS_IN_REVIEW
  DOCS_REVIEWED
  REFERRAL_GENERATED
  REFERRAL_DISPATCHED
  REFERRAL_SIGNED
  LISTING_AUTHORIZED
  AGENT_INSPECTED
  TITLE_CHECKED
  UNDER_CONTRACT
  SOLD
}

enum FeeType {
  PERCENTAGE
  FLAT
}

enum ReferralType {
  BUYER
  SELLER
}

type Referral @model @auth(rules: [{allow: public}]) {
  id: ID!
  feeBasis: String
  token: String
  clientType: String
  listingPriceEstimate: Float
  clientReason: String
  feeType: String
  feeValue: String
  referralType: String
  buyerReferenceID: String
  senderSignedDate: AWSDate
  receiverSignedDate: AWSDate
  referralNote: String
  sellerRealEstateProfileID: String
}

type Agent @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  officeName: String
  address: Location
  email: AWSEmail
  primaryPhone: AWSPhone
  cellPhone: AWSPhone
  faxNumber: AWSPhone
}

type InvestorInterest @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: AWSEmail
  phone: AWSPhone
  investmentRange: String
  financing: String
  message: String
}

type Attachment {
  name: String!
  category: String
  fileKey: String
  status: String
  description: String
}

type Location {
  id: ID
  name: String!
  description: String
  streetAddress: String!
  city: String!
  adminArea: String
  stateProvinceOrRegion: String!
  country: String!
  countryCode: String
  postalCode: String!
  postalCodeSuffix: String
  formattedAddress: String
  status: String
}

type SellerRealEstateProfile @model @auth(rules: [{allow: public, operations: [create, read, update]}, {allow: private, operations: [create, read, update]}, {allow: owner, operations: [create, update, read]}]) {
  id: ID!
  searchStage: String
  houseType: String
  primaryHome: String
  address: Location
  sellerReference: String
  rentBackPeriod: String
  bedrooms: String
  bathrooms: String
  attachments: [Attachment]
  status: RealEstateStatus
  firstName: String
  lastName: String
  sellerPhone: AWSPhone
  sellerEmail: AWSEmail
}
 